{"filter":false,"title":"drinkSpec.js","tooltip":"/spec/drinkSpec.js","undoManager":{"mark":29,"position":28,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["d"],"id":1},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["e"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["s"]},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["c"]},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["r"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["i"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["b"]},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["l"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"remove","lines":["e"],"id":2},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"remove","lines":["l"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"remove","lines":["b"]}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["b"],"id":3},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["l"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":[" "],"id":4}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"remove","lines":[" "],"id":5},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"remove","lines":["e"]},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"remove","lines":["l"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"remove","lines":["b"]}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["b"],"id":6},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":[" "],"id":7}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"remove","lines":[" "],"id":8}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":[" "],"id":9},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["f"]},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["u"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["n"]},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["c"]},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["t"]},{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["i"]},{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["o"]},{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["n"]}],[{"start":{"row":0,"column":17},"end":{"row":0,"column":19},"action":"insert","lines":["()"],"id":10}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":22},"action":"insert","lines":["whatCanIDrink"],"id":11}],[{"start":{"row":0,"column":22},"end":{"row":0,"column":23},"action":"insert","lines":[" "],"id":12}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["("],"id":13},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["\""]}],[{"start":{"row":0,"column":24},"end":{"row":0,"column":25},"action":"insert","lines":["\""],"id":14}],[{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["M"],"id":15},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["y"]}],[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":[" "],"id":16}],[{"start":{"row":0,"column":27},"end":{"row":0,"column":28},"action":"insert","lines":[" "],"id":17},{"start":{"row":0,"column":28},"end":{"row":0,"column":29},"action":"insert","lines":["f"]},{"start":{"row":0,"column":29},"end":{"row":0,"column":30},"action":"insert","lines":["u"]}],[{"start":{"row":0,"column":30},"end":{"row":0,"column":31},"action":"insert","lines":["n"],"id":18},{"start":{"row":0,"column":31},"end":{"row":0,"column":32},"action":"insert","lines":["c"]},{"start":{"row":0,"column":32},"end":{"row":0,"column":33},"action":"insert","lines":["t"]},{"start":{"row":0,"column":33},"end":{"row":0,"column":34},"action":"insert","lines":["i"]},{"start":{"row":0,"column":34},"end":{"row":0,"column":35},"action":"insert","lines":["o"]},{"start":{"row":0,"column":35},"end":{"row":0,"column":36},"action":"insert","lines":["n"]}],[{"start":{"row":0,"column":37},"end":{"row":0,"column":38},"action":"insert","lines":[","],"id":19}],[{"start":{"row":0,"column":49},"end":{"row":0,"column":50},"action":"insert","lines":[" "],"id":20},{"start":{"row":0,"column":50},"end":{"row":0,"column":51},"action":"insert","lines":["{"]}],[{"start":{"row":0,"column":51},"end":{"row":2,"column":1},"action":"insert","lines":["","    ","}"],"id":21}],[{"start":{"row":1,"column":4},"end":{"row":3,"column":7},"action":"insert","lines":["  beforeEach(function() {","        drink = new whatCanIDrink();","    });"],"id":22}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"remove","lines":["}"],"id":23}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":24}],[{"start":{"row":5,"column":0},"end":{"row":12,"column":11},"action":"insert","lines":[" describe(\"Checks age\", function() {","        // Specs are defined by calling the global Jasmine function it","        it(\"should exist\", function() {","            // Expectations are built with the function expect which takes a value, called the actual.","            // Each matcher implements a boolean comparison between the actual value and the expected value.","            // Any matcher can evaluate to a negative assertion by chaining the call to expect with a not before calling the matcher.","            expect(whatCanIDrink).toBeDefined();","        });"],"id":25}],[{"start":{"row":12,"column":11},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":26},{"start":{"row":13,"column":0},"end":{"row":13,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":13,"column":8},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":27},{"start":{"row":14,"column":0},"end":{"row":14,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":14,"column":8},"end":{"row":17,"column":11},"action":"insert","lines":[" it(\"should return drink toddy when called as whatCanIDrink(13)\", function() {","            var result = whatCanIDrink(13)","            expect(result).toBe(\"Drink Toddy\");","        });"],"id":28}],[{"start":{"row":0,"column":0},"end":{"row":17,"column":11},"action":"remove","lines":["describe (\"My whatCanIDrink function\", function() {","      beforeEach(function() {","        drink = new whatCanIDrink();","    });",""," describe(\"Checks age\", function() {","        // Specs are defined by calling the global Jasmine function it","        it(\"should exist\", function() {","            // Expectations are built with the function expect which takes a value, called the actual.","            // Each matcher implements a boolean comparison between the actual value and the expected value.","            // Any matcher can evaluate to a negative assertion by chaining the call to expect with a not before calling the matcher.","            expect(whatCanIDrink).toBeDefined();","        });","        ","         it(\"should return drink toddy when called as whatCanIDrink(13)\", function() {","            var result = whatCanIDrink(13)","            expect(result).toBe(\"Drink Toddy\");","        });"],"id":29},{"start":{"row":0,"column":0},"end":{"row":51,"column":3},"action":"insert","lines":["describe(\"My whatCanIDrink function\", function() {","    // A test suite begins with a call to the global Jasmine function describe with two parameters: a string and a function.","    beforeEach(function() {","        drink = new whatCanIDrink();","    });","    ","    describe(\"Checks age\", function() {","        // Specs are defined by calling the global Jasmine function it","        it(\"should exist\", function() {","            // Expectations are built with the function expect which takes a value, called the actual.","            // Each matcher implements a boolean comparison between the actual value and the expected value.","            // Any matcher can evaluate to a negative assertion by chaining the call to expect with a not before calling the matcher.","            expect(whatCanIDrink).toBeDefined();","        });","        ","        it(\"should return drink toddy when called as whatCanIDrink(13)\", function() {","            var result = whatCanIDrink(13)","            expect(result).toBe(\"Drink Toddy\");","        });","        ","        ","        it(\"should return drink coke when called as whatCanIDrink(17)\", function() {","            var result = whatCanIDrink(17)","            expect(result).toBe(\"Drink Coke\");","        });","        ","        it(\"should return drink beer when called as whatCanIDrink(18)\", function() {","            var result = whatCanIDrink(18)","            expect(result).toBe(\"Drink Beer\");","        });","        ","        it(\"should return drink beer when called as whatCanIDrink(20)\", function() {","            var result = whatCanIDrink(20)","            expect(result).toBe(\"Drink Beer\");","        }); ","        ","        it(\"should return drink whisky when called as whatCanIDrink(30)\", function() {","            var result = whatCanIDrink(30)","            expect(result).toBe(\"Drink Whisky\");","        });","        ","        it(\"should be unable to return a drink when called as whatCanIDrink(140)\", function() {","            var result = whatCanIDrink(140)","            expect(result).toBe(\"Sorry. I can’t tell what drink because that age is incorrect!\");","        });","        ","        it(\"should contain Drink when called as whatCanIDrink(17)\", function() {","            var result = whatCanIDrink(10).indexOf(\"Drink\");","            expect(result).not.toEqual(-1);","        });","    });","});"]}],[{"start":{"row":46,"column":6},"end":{"row":49,"column":11},"action":"remove","lines":["  it(\"should contain Drink when called as whatCanIDrink(17)\", function() {","            var result = whatCanIDrink(10).indexOf(\"Drink\");","            expect(result).not.toEqual(-1);","        });"],"id":30}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":46,"column":6},"end":{"row":49,"column":11},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1571233506716,"hash":"775c073eee79558912944d938db5105c8c7f85d8"}